import customtkinter as ctk
import cv2
from PIL import Image, ImageTk

def button_callback():
    print("button pressed")

class app(ctk.CTk):
    def __init__(self):
        ID = "Oussema"  # to be programmed with RFID
        super().__init__()
        self.title("my app")
        self.geometry("1920x1080")

        # Allow the main window to be resizable
        self.resizable(True, True)

        self.grid_columnconfigure(0, weight=1)
        self.grid_rowconfigure(0, weight=1)

        
        self.main_frame = ctk.CTkFrame(self)
        self.main_frame.grid(row=1, column=0, padx=10, pady=10, sticky="n")
        self.main_frame.columnconfigure(0, weight=1)
        self.main_frame.rowconfigure(0, weight=1)
        self.main_frame.configure(fg_color="transparent", bg_color="transparent")

        self.cap = cv2.VideoCapture(0)

        self.label = ctk.CTkLabel(self.main_frame, text=f"Bonjour Docteur {ID}", fg_color="transparent", font=("Serif", 50), height=50)
        self.label.grid(sticky="new")
        self.label.pack(side="top", padx=10, pady=10)

        self.canvas = ctk.CTkCanvas(self.main_frame, width=630, height=400)
        self.canvas.pack(side="left", padx=10, pady=10)

        self.button_frame = ctk.CTkFrame(self.main_frame)
        self.button_frame.pack(side="right", padx=10, pady=300)
        self.button_frame.configure(fg_color="transparent", bg_color="transparent", width=500)

        self.button_1 = ctk.CTkButton(self.button_frame, text="Consulter mon profil", font=("Serif", 33), command=button_callback, width=33, height=33)
        self.button_1.pack(padx=200, pady=(10, 10))

        self.button_2 = ctk.CTkButton(self.button_frame, text="Faire capture photo", font=("Serif", 33), command=button_callback, width=33, height=33)
        self.button_2.pack(padx=200, pady=(10, 10))

        self.button_2 = ctk.CTkButton(self.button_frame, text="Faire capture vid√©o", font=("Serif", 33), command=button_callback, width=33, height=33)
        self.button_2.pack(padx=200, pady=(10, 10))

        self.photo = None
        self.update()

    def update(self):
        ret, frame = self.cap.read()
        if ret:
            rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            self.photo = ImageTk.PhotoImage(image=Image.fromarray(rgb_frame))
            self.canvas.create_image(0, 0, anchor="nw", image=self.photo)
        self.after(10, self.update)

# Create an instance of the app class
app = app()

# Run the Tkinter event loop
app.mainloop()
